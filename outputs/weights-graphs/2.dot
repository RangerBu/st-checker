digraph "[IF x <= y THEN]" {
"0x30fa8c0" [label="[x <-- 50   otimes 0x30fa930 oplus 0x30fab40]", color=lightblue,style=filled,shape=box]
"0x30fa8c0" -> "0x30fa930" [label=extend_pre,color=black]
"0x30fa930" [label="[z >= 200 otimes 0x30fa9a0 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fa930" -> "0x30fa9a0" [label=extend_pre,color=black]
"0x30fa9a0" [label="[z >= 100 otimes 0x30faa10 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fa9a0" -> "0x30faa10" [label=extend_pre,color=black]
"0x30faa10" [label="[z >= 50 otimes 0 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fa8c0" -> "0x30fab40" [label=combine_pre,color=black]
"0x30fab40" [label="[x <-- x - 3 otimes 0x30fabb0 oplus 0x30fad00]", color=lightblue,style=filled,shape=box]
"0x30fab40" -> "0x30fabb0" [label=extend_pre,color=black]
"0x30fabb0" [label="[z < 200 otimes 0x30fac20 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fabb0" -> "0x30fac20" [label=extend_pre,color=black]
"0x30fac20" [label="[z >= 100 otimes 0x30fac90 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fac20" -> "0x30fac90" [label=extend_pre,color=black]
"0x30fac90" [label="[z >= 50 otimes 0 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fab40" -> "0x30fad00" [label=combine_pre,color=black]
"0x30fad00" [label="[x >= 10 otimes 0x30fad70 oplus 0x30faf30]", color=lightblue,style=filled,shape=box]
"0x30fad00" -> "0x30fad70" [label=extend_pre,color=black]
"0x30fad70" [label="[x >= 20 otimes 0x30fade0 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fad70" -> "0x30fade0" [label=extend_pre,color=black]
"0x30fade0" [label="[x <-- x - 2 otimes 0x30fae50 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fade0" -> "0x30fae50" [label=extend_pre,color=black]
"0x30fae50" [label="[z < 100 otimes 0x30faec0 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fae50" -> "0x30faec0" [label=extend_pre,color=black]
"0x30faec0" [label="[z >= 50 otimes 0 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fad00" -> "0x30faf30" [label=combine_pre,color=black]
"0x30faf30" [label="[x <-- 10   otimes 0x30fafa0 oplus 0x30fb1d0]", color=lightblue,style=filled,shape=box]
"0x30faf30" -> "0x30fafa0" [label=extend_pre,color=black]
"0x30fafa0" [label="[x < 10 otimes 0x30fb010 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fafa0" -> "0x30fb010" [label=extend_pre,color=black]
"0x30fb010" [label="[x >= 20 otimes 0x30fb080 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fb010" -> "0x30fb080" [label=extend_pre,color=black]
"0x30fb080" [label="[x <-- x - 2 otimes 0x30fb0f0 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fb080" -> "0x30fb0f0" [label=extend_pre,color=black]
"0x30fb0f0" [label="[z < 100 otimes 0x30fb160 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fb0f0" -> "0x30fb160" [label=extend_pre,color=black]
"0x30fb160" [label="[z >= 50 otimes 0 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30faf30" -> "0x30fb1d0" [label=combine_pre,color=black]
"0x30fb1d0" [label="[x <-- 20   otimes 0x30fb240 oplus 0x30fb400]", color=lightblue,style=filled,shape=box]
"0x30fb1d0" -> "0x30fb240" [label=extend_pre,color=black]
"0x30fb240" [label="[x < 20 otimes 0x30fb2b0 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fb240" -> "0x30fb2b0" [label=extend_pre,color=black]
"0x30fb2b0" [label="[x <-- x - 2 otimes 0x30fb320 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fb2b0" -> "0x30fb320" [label=extend_pre,color=black]
"0x30fb320" [label="[z < 100 otimes 0x30fb390 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fb320" -> "0x30fb390" [label=extend_pre,color=black]
"0x30fb390" [label="[z >= 50 otimes 0 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fb1d0" -> "0x30fb400" [label=combine_pre,color=black]
"0x30fb400" [label="[x <-- x - 1 otimes 0x30fb470 oplus 0]", color=lightblue,style=filled,shape=box]
"0x30fb400" -> "0x30fb470" [label=extend_pre,color=black]
"0x30fb470" [label="[z < 50 otimes 0 oplus 0]", color=lightblue,style=filled,shape=box]
}


